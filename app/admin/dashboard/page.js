"use client";

import { useEffect, useState } from "react";
import {
  Typography,
  Grid,
  Card,
  CardContent,
  CardMedia,
  Paper,
  Button,
  Divider,
} from "@mui/material";
import { useRouter } from "next/navigation";
import ArrowBackIcon from "@mui/icons-material/ArrowBack";
import { db } from "@/app/firebase/config"; // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Firebase
import { collection, getDocs } from "firebase/firestore"; // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Firestore
import MyAppBar from "@/components/Appbar"; // ‡πÉ‡∏ä‡πâ AppBar ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á

export default function AdminDashboard() {
  const [cars, setCars] = useState([]); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ
  const [bookings, setBookings] = useState([]); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
  const router = useRouter();

  useEffect(() => {
    const fetchData = async () => {
      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ä‡∏±‡∏ô 'cars' ‡πÅ‡∏•‡∏∞ 'bookings' ‡∏à‡∏≤‡∏Å Firestore
      const carSnapshot = await getDocs(collection(db, "cars"));
      const bookingSnapshot = await getDocs(collection(db, "bookings"));

      const carList = carSnapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));

      const bookingList = bookingSnapshot.docs.map((doc) => doc.data());

      setCars(carList); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå
      setBookings(bookingList); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    };

    fetchData(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  }, []);

  const getAvailableStock = (carId, stock) => {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    const booked = bookings.filter((b) => b.carId === carId).length;
    return stock - booked; // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
  };

  return (
    <div>
      <MyAppBar />

      <Paper sx={{ p: 4, m: 3 }}>
        <Button
          startIcon={<ArrowBackIcon />}
          variant="outlined"
          onClick={() => router.push("/admin")} // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö
          sx={{ mb: 2 }}
        >
          ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
        </Button>

        <Typography variant="h4" gutterBottom>
          üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Stock)
        </Typography>
        <Divider sx={{ mb: 3 }} />
        <Grid container spacing={2}>
          {cars.map((car) => {
            const available = getAvailableStock(car.id, car.stock); // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
            return (
              <Grid item xs={12} sm={6} md={4} key={car.id}>
                <Card>
                  <CardMedia
                    component="img"
                    image={car.imageUrl} // ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏£‡∏ñ
                    alt={car.name}
                    sx={{
                      width: "380px", // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ
                      height: "290px", // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ
                      objectFit: "fill", // ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ
                    }}
                  />
                  <CardContent>
                    <Typography variant="h6">{car.name}</Typography>
                    <Typography>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: {car.type}</Typography>
                    <Typography>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏ß‡∏±‡∏ô: ‡∏ø{car.pricePerDay}</Typography>
                    <Typography color={available <= 0 ? "error" : "primary"}>
                      {" "}
                      ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {available} ‡∏Ñ‡∏±‡∏ô
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
            );
          })}
        </Grid>
      </Paper>
    </div>
  );
}
